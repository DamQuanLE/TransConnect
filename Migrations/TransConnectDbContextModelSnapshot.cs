// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TransConnect.DbContexts;

#nullable disable

namespace TransConnect.Migrations
{
    [DbContext(typeof(TransConnectDbContext))]
    partial class TransConnectDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TransConnect.Models.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SocialSecurityNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("TransConnect.Models.Edge", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<double>("Distance")
                        .HasColumnType("double");

                    b.Property<Guid>("EndId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("StartId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Time")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EndId");

                    b.HasIndex("StartId");

                    b.ToTable("Edges");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8f5494a4-f1c9-4bab-8fa7-24386fed6d91"),
                            Distance = 133.0,
                            EndId = new Guid("f249ecbc-b723-45e8-9b4e-4f05316e0e55"),
                            StartId = new Guid("28973532-9b3e-4fc2-85d2-186233d8770f"),
                            Time = 105
                        },
                        new
                        {
                            Id = new Guid("25edb1f3-a573-42b6-98c4-4a86ada89e19"),
                            Distance = 464.0,
                            EndId = new Guid("f08bc4dd-d79c-43ab-8c2b-e77c5a198afa"),
                            StartId = new Guid("28973532-9b3e-4fc2-85d2-186233d8770f"),
                            Time = 295
                        },
                        new
                        {
                            Id = new Guid("d7151037-0cfb-4425-af6a-300f22958d05"),
                            Distance = 294.0,
                            EndId = new Guid("8945ad8b-f714-4744-9ac8-d767b143ab7b"),
                            StartId = new Guid("28973532-9b3e-4fc2-85d2-186233d8770f"),
                            Time = 191
                        },
                        new
                        {
                            Id = new Guid("aa61dd64-dc6a-4e0f-90d3-bdf60cb317ac"),
                            Distance = 187.0,
                            EndId = new Guid("e9442fc5-3b3a-4590-a6e4-a3296ea85ff4"),
                            StartId = new Guid("8945ad8b-f714-4744-9ac8-d767b143ab7b"),
                            Time = 140
                        },
                        new
                        {
                            Id = new Guid("d23a4b9b-9d32-474d-a744-eda72cde7c2b"),
                            Distance = 183.0,
                            EndId = new Guid("978ffde7-46a9-4a87-b090-a185a1ad0aac"),
                            StartId = new Guid("e9442fc5-3b3a-4590-a6e4-a3296ea85ff4"),
                            Time = 98
                        },
                        new
                        {
                            Id = new Guid("4fe6e926-1284-4c55-9d3a-a5191b37efec"),
                            Distance = 202.0,
                            EndId = new Guid("477524a9-05e3-4726-a73c-47bf65e3a1a7"),
                            StartId = new Guid("978ffde7-46a9-4a87-b090-a185a1ad0aac"),
                            Time = 107
                        },
                        new
                        {
                            Id = new Guid("cf3fe099-abcd-4b2f-9a24-4a03b51b91b3"),
                            Distance = 309.0,
                            EndId = new Guid("0adfafd1-eb18-4320-8880-e8c7e0d8bc36"),
                            StartId = new Guid("477524a9-05e3-4726-a73c-47bf65e3a1a7"),
                            Time = 159
                        },
                        new
                        {
                            Id = new Guid("dd97114b-503d-4fc7-82f1-3ac6a40fc2d7"),
                            Distance = 193.0,
                            EndId = new Guid("0adfafd1-eb18-4320-8880-e8c7e0d8bc36"),
                            StartId = new Guid("5a9be339-8eac-4928-9f44-53b0206ca5f4"),
                            Time = 101
                        },
                        new
                        {
                            Id = new Guid("6b489434-d454-46c9-8a1d-0d3e79617f35"),
                            Distance = 289.0,
                            EndId = new Guid("7bb88574-a587-43e9-884d-073bac6b515d"),
                            StartId = new Guid("0adfafd1-eb18-4320-8880-e8c7e0d8bc36"),
                            Time = 146
                        },
                        new
                        {
                            Id = new Guid("8d558802-916e-4b08-aae2-52dcd0ac46ea"),
                            Distance = 52.0,
                            EndId = new Guid("7bb88574-a587-43e9-884d-073bac6b515d"),
                            StartId = new Guid("b12865ba-f620-456b-a589-163a088741a4"),
                            Time = 35
                        },
                        new
                        {
                            Id = new Guid("9a24ba87-211d-4c05-a5eb-a0f4a2a3793e"),
                            Distance = 126.0,
                            EndId = new Guid("8b615bc2-b275-4d2b-95e5-3a1dcd7cd97d"),
                            StartId = new Guid("7bb88574-a587-43e9-884d-073bac6b515d"),
                            Time = 73
                        },
                        new
                        {
                            Id = new Guid("19871e0b-710b-4ad4-8e1a-5a92806938a9"),
                            Distance = 99.0,
                            EndId = new Guid("c04d0d48-0f1c-4bd8-bfa2-0d0cb0bd66c5"),
                            StartId = new Guid("f112cec4-ca11-46cb-bd44-31736c8d66cf"),
                            Time = 60
                        },
                        new
                        {
                            Id = new Guid("437003d3-b6f9-40f8-964a-0151a5a98e02"),
                            Distance = 224.0,
                            EndId = new Guid("093eaa96-84ec-49a8-b7fb-3177a46fe6ab"),
                            StartId = new Guid("5c727375-139c-4506-bc13-1aa5627c7e29"),
                            Time = 123
                        },
                        new
                        {
                            Id = new Guid("58de1b26-b110-4231-83bc-1a222e69a9fe"),
                            Distance = 169.0,
                            EndId = new Guid("5c727375-139c-4506-bc13-1aa5627c7e29"),
                            StartId = new Guid("46881132-143a-4581-9407-476450172392"),
                            Time = 95
                        });
                });

            modelBuilder.Entity("TransConnect.Models.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateOfEntry")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("ManagerId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SocialSecurityNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ManagerId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ec9c02a9-edf8-4418-8d77-8163f4332ba8"),
                            Address = "48 Thompson Terrace",
                            DateOfBirth = new DateTime(1990, 7, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfEntry = new DateTime(2015, 12, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "pbarkley0@spotify.com",
                            FirstName = "Pearce",
                            Gender = 0,
                            LastName = "Dupond",
                            Phone = "724-760-5107",
                            Position = "Directeur Général",
                            Salary = 5000m,
                            SocialSecurityNumber = "833-68-2338"
                        },
                        new
                        {
                            Id = new Guid("b056aea5-fae1-4807-91a7-a6b77661b862"),
                            Address = "8 Mitchell Point",
                            DateOfBirth = new DateTime(1990, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfEntry = new DateTime(2021, 11, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "skirgan1@is.gd",
                            FirstName = "Shannen",
                            Gender = 1,
                            LastName = "Fiesta",
                            ManagerId = new Guid("ec9c02a9-edf8-4418-8d77-8163f4332ba8"),
                            Phone = "224-178-9714",
                            Position = "Directrice Commerciale",
                            Salary = 3959m,
                            SocialSecurityNumber = "214-26-3592"
                        },
                        new
                        {
                            Id = new Guid("2d654c99-6fec-480e-b0f8-bc81571e3a91"),
                            Address = "93855 Heath Junction",
                            DateOfBirth = new DateTime(1974, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfEntry = new DateTime(2019, 10, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "rwinborn2@hibu.com",
                            FirstName = "Raeann",
                            Gender = 0,
                            LastName = "Fertard",
                            ManagerId = new Guid("ec9c02a9-edf8-4418-8d77-8163f4332ba8"),
                            Phone = "764-565-2052",
                            Position = "Directeur des opérations",
                            Salary = 3480m,
                            SocialSecurityNumber = "509-39-5602"
                        },
                        new
                        {
                            Id = new Guid("bc08594b-d2f2-4ce0-bbc7-f95188ea26a5"),
                            Address = "65280 Burning Wood Place",
                            DateOfBirth = new DateTime(1992, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfEntry = new DateTime(2021, 6, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mbegley3@facebook.com",
                            FirstName = "Mildrid",
                            Gender = 1,
                            LastName = "Joyeuse",
                            ManagerId = new Guid("ec9c02a9-edf8-4418-8d77-8163f4332ba8"),
                            Phone = "535-342-0332",
                            Position = "Directrice des RH",
                            Salary = 3304m,
                            SocialSecurityNumber = "809-30-9487"
                        },
                        new
                        {
                            Id = new Guid("7cf247c5-831e-446d-b128-16e309688be4"),
                            Address = "6739 Jenna Place",
                            DateOfBirth = new DateTime(1983, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfEntry = new DateTime(2018, 6, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jbiesinger4@github.com",
                            FirstName = "Jedediah",
                            Gender = 0,
                            LastName = "GripSous",
                            ManagerId = new Guid("ec9c02a9-edf8-4418-8d77-8163f4332ba8"),
                            Phone = "584-130-3118",
                            Position = "Directeur Financier",
                            Salary = 3185m,
                            SocialSecurityNumber = "830-31-4802"
                        },
                        new
                        {
                            Id = new Guid("bacd7e31-759a-43de-b6ff-2053ee252166"),
                            Address = "0169 Morningstar Road",
                            DateOfBirth = new DateTime(1976, 2, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfEntry = new DateTime(2017, 6, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "skinnar5@ted.com",
                            FirstName = "Sigvard",
                            Gender = 0,
                            LastName = "Forge",
                            ManagerId = new Guid("b056aea5-fae1-4807-91a7-a6b77661b862"),
                            Phone = "756-202-9590",
                            Position = "Commercial",
                            Salary = 2467m,
                            SocialSecurityNumber = "823-45-9649"
                        },
                        new
                        {
                            Id = new Guid("01107920-0e65-412d-9dca-b67891678f66"),
                            Address = "67726 Mcguire Avenue",
                            DateOfBirth = new DateTime(1999, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfEntry = new DateTime(2015, 7, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "gmohammed6@163.com",
                            FirstName = "Grange",
                            Gender = 1,
                            LastName = "Fermi",
                            ManagerId = new Guid("b056aea5-fae1-4807-91a7-a6b77661b862"),
                            Phone = "794-623-0664",
                            Position = "Commerciale",
                            Salary = 2301m,
                            SocialSecurityNumber = "131-14-8472"
                        },
                        new
                        {
                            Id = new Guid("df60222f-eb01-4a42-8780-44b6b7850a2f"),
                            Address = "28506 John Wall Junction",
                            DateOfBirth = new DateTime(1985, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfEntry = new DateTime(2018, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "pqueen7@bizjournals.com",
                            FirstName = "Pierre",
                            Gender = 0,
                            LastName = "Royal",
                            ManagerId = new Guid("2d654c99-6fec-480e-b0f8-bc81571e3a91"),
                            Phone = "286-496-4478",
                            Position = "Chef Equipe",
                            Salary = 2300m,
                            SocialSecurityNumber = "361-63-4368"
                        },
                        new
                        {
                            Id = new Guid("dc520825-97ef-4b66-a1ef-dd3daa236948"),
                            Address = "81843 Myrtle Pass",
                            DateOfBirth = new DateTime(1992, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfEntry = new DateTime(2020, 9, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "omarguerite8@deliciousdays.com",
                            FirstName = "Osborne",
                            Gender = 1,
                            LastName = "Prince",
                            ManagerId = new Guid("2d654c99-6fec-480e-b0f8-bc81571e3a91"),
                            Phone = "349-391-5249",
                            Position = "Chef d'Equipe",
                            Salary = 2757m,
                            SocialSecurityNumber = "329-48-0811"
                        },
                        new
                        {
                            Id = new Guid("cdafcb41-f43c-43b1-9c0f-292cf761c3a4"),
                            Address = "95778 Lakeland Terrace",
                            DateOfBirth = new DateTime(1977, 2, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfEntry = new DateTime(2020, 2, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ghazeltine9@wix.com",
                            FirstName = "Greta",
                            Gender = 1,
                            LastName = "Couleur",
                            ManagerId = new Guid("bc08594b-d2f2-4ce0-bbc7-f95188ea26a5"),
                            Phone = "948-301-1911",
                            Position = "Formation",
                            Salary = 2632m,
                            SocialSecurityNumber = "761-30-1257"
                        },
                        new
                        {
                            Id = new Guid("1ba0bb03-ee36-4ce9-81d9-caba15ce1ab2"),
                            Address = "11 Nancy Alley",
                            DateOfBirth = new DateTime(1972, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfEntry = new DateTime(2020, 3, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ajoerninga@is.gd",
                            FirstName = "Adella",
                            Gender = 1,
                            LastName = "ToutleMonde",
                            ManagerId = new Guid("bc08594b-d2f2-4ce0-bbc7-f95188ea26a5"),
                            Phone = "602-799-3984",
                            Position = "Contrats",
                            Salary = 2572m,
                            SocialSecurityNumber = "419-93-2623"
                        },
                        new
                        {
                            Id = new Guid("971270ad-cd01-4e86-8525-e8fe1503dbcd"),
                            Address = "4406 Ryan Way",
                            DateOfBirth = new DateTime(1970, 11, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfEntry = new DateTime(2016, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "tbuckettb@xrea.com",
                            FirstName = "Terri-jo",
                            Gender = 0,
                            LastName = "Picsou",
                            ManagerId = new Guid("7cf247c5-831e-446d-b128-16e309688be4"),
                            Phone = "745-927-0863",
                            Position = "Direction comptable",
                            Salary = 2973m,
                            SocialSecurityNumber = "161-46-5816"
                        },
                        new
                        {
                            Id = new Guid("933144a2-8c54-483e-8a83-908f7f17923e"),
                            Address = "53 Coolidge Plaza",
                            DateOfBirth = new DateTime(1993, 9, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfEntry = new DateTime(2018, 5, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "kallikerc@sciencedaily.com",
                            FirstName = "Katinka",
                            Gender = 0,
                            LastName = "GrosSous",
                            ManagerId = new Guid("7cf247c5-831e-446d-b128-16e309688be4"),
                            Phone = "184-423-4452",
                            Position = "Controleur de Gestion",
                            Salary = 2937m,
                            SocialSecurityNumber = "768-63-7325"
                        },
                        new
                        {
                            Id = new Guid("194a3805-66b1-4dea-a241-9b72877151c4"),
                            Address = "8704 Laurel Crossing",
                            DateOfBirth = new DateTime(1976, 8, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfEntry = new DateTime(2015, 12, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "wmcelmurrayd@answers.com",
                            FirstName = "Woodie",
                            Gender = 0,
                            LastName = "Romu",
                            ManagerId = new Guid("df60222f-eb01-4a42-8780-44b6b7850a2f"),
                            Phone = "225-855-0185",
                            Position = "Chauffeur",
                            Salary = 1948m,
                            SocialSecurityNumber = "394-89-9842"
                        },
                        new
                        {
                            Id = new Guid("54413841-b0ff-4ee0-9a35-ffc2013b2da7"),
                            Address = "1065 American Ash Street",
                            DateOfBirth = new DateTime(1989, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfEntry = new DateTime(2021, 11, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "lzorere@reddit.com",
                            FirstName = "Leona",
                            Gender = 1,
                            LastName = "Romi",
                            ManagerId = new Guid("df60222f-eb01-4a42-8780-44b6b7850a2f"),
                            Phone = "473-618-6575",
                            Position = "Chauffeur",
                            Salary = 1846m,
                            SocialSecurityNumber = "843-45-5234"
                        },
                        new
                        {
                            Id = new Guid("652b3adb-e1d0-4fa9-92af-b5cce4ad69da"),
                            Address = "6341 Butterfield Road",
                            DateOfBirth = new DateTime(1971, 7, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfEntry = new DateTime(2015, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "nknightlyf@ifeng.com",
                            FirstName = "Neely",
                            Gender = 0,
                            LastName = "Roma",
                            ManagerId = new Guid("df60222f-eb01-4a42-8780-44b6b7850a2f"),
                            Phone = "572-533-9947",
                            Position = "Chauffeur",
                            Salary = 1780m,
                            SocialSecurityNumber = "307-20-9986"
                        },
                        new
                        {
                            Id = new Guid("54548b27-43f6-4fa9-a641-7e6bf466f7f0"),
                            Address = "52760 Crownhardt Terrace",
                            DateOfBirth = new DateTime(1989, 8, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfEntry = new DateTime(2021, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "prichesg@sun.com",
                            FirstName = "Paco",
                            Gender = 1,
                            LastName = "Rome",
                            ManagerId = new Guid("dc520825-97ef-4b66-a1ef-dd3daa236948"),
                            Phone = "603-772-5979",
                            Position = "Chauffeur",
                            Salary = 1479m,
                            SocialSecurityNumber = "727-91-3168"
                        },
                        new
                        {
                            Id = new Guid("c4e4500a-b27a-424f-833f-e9f10522a85b"),
                            Address = "87435 Blackbird Road",
                            DateOfBirth = new DateTime(1989, 12, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfEntry = new DateTime(2017, 3, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "dsnasdellh@symantec.com",
                            FirstName = "Dilan",
                            Gender = 0,
                            LastName = "Rimou",
                            ManagerId = new Guid("dc520825-97ef-4b66-a1ef-dd3daa236948"),
                            Phone = "669-272-5558",
                            Position = "Chauffeur",
                            Salary = 1786m,
                            SocialSecurityNumber = "703-46-8885"
                        },
                        new
                        {
                            Id = new Guid("1d6f4776-f49b-43a3-8275-eb3626568231"),
                            Address = "212 Commercial Terrace",
                            DateOfBirth = new DateTime(1981, 6, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfEntry = new DateTime(2020, 11, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "hvausei@dropbox.com",
                            FirstName = "Hi",
                            Gender = 1,
                            LastName = "Fournier",
                            ManagerId = new Guid("971270ad-cd01-4e86-8525-e8fe1503dbcd"),
                            Phone = "266-230-2187",
                            Position = "Comptable",
                            Salary = 1525m,
                            SocialSecurityNumber = "275-33-7461"
                        },
                        new
                        {
                            Id = new Guid("58f34492-568b-418b-badd-597fe0a96e96"),
                            Address = "7199 Hollow Ridge Crossing",
                            DateOfBirth = new DateTime(1981, 2, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfEntry = new DateTime(2016, 2, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "asolmanj@youku.com",
                            FirstName = "Averill",
                            Gender = 1,
                            LastName = "Gautier",
                            ManagerId = new Guid("971270ad-cd01-4e86-8525-e8fe1503dbcd"),
                            Phone = "963-779-2340",
                            Position = "Comptable",
                            Salary = 1799m,
                            SocialSecurityNumber = "512-15-9115"
                        });
                });

            modelBuilder.Entity("TransConnect.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("CancellationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("CompletionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("ConfirmationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("varchar(21)");

                    b.Property<Guid?>("DriverId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("EndId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("PreparationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("StartId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid?>("VehicleId")
                        .HasColumnType("char(36)");

                    b.Property<int>("VehicleType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("DriverId");

                    b.HasIndex("EndId");

                    b.HasIndex("StartId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Orders");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Order");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("TransConnect.Models.OrderPath", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("FromId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ToId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("FromId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ToId");

                    b.ToTable("OrderPaths");
                });

            modelBuilder.Entity("TransConnect.Models.Point", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Points");

                    b.HasData(
                        new
                        {
                            Id = new Guid("28973532-9b3e-4fc2-85d2-186233d8770f"),
                            Name = "Paris"
                        },
                        new
                        {
                            Id = new Guid("f249ecbc-b723-45e8-9b4e-4f05316e0e55"),
                            Name = "Rouen"
                        },
                        new
                        {
                            Id = new Guid("f08bc4dd-d79c-43ab-8c2b-e77c5a198afa"),
                            Name = "Lyon"
                        },
                        new
                        {
                            Id = new Guid("8945ad8b-f714-4744-9ac8-d767b143ab7b"),
                            Name = "Angers"
                        },
                        new
                        {
                            Id = new Guid("e9442fc5-3b3a-4590-a6e4-a3296ea85ff4"),
                            Name = "La Rochelle"
                        },
                        new
                        {
                            Id = new Guid("978ffde7-46a9-4a87-b090-a185a1ad0aac"),
                            Name = "Bordeaux"
                        },
                        new
                        {
                            Id = new Guid("477524a9-05e3-4726-a73c-47bf65e3a1a7"),
                            Name = "Biarritz"
                        },
                        new
                        {
                            Id = new Guid("0adfafd1-eb18-4320-8880-e8c7e0d8bc36"),
                            Name = "Toulouse"
                        },
                        new
                        {
                            Id = new Guid("5a9be339-8eac-4928-9f44-53b0206ca5f4"),
                            Name = "Pau"
                        },
                        new
                        {
                            Id = new Guid("7bb88574-a587-43e9-884d-073bac6b515d"),
                            Name = "Nimes"
                        },
                        new
                        {
                            Id = new Guid("b12865ba-f620-456b-a589-163a088741a4"),
                            Name = "Montpellier"
                        },
                        new
                        {
                            Id = new Guid("8b615bc2-b275-4d2b-95e5-3a1dcd7cd97d"),
                            Name = "Marseilles"
                        },
                        new
                        {
                            Id = new Guid("f112cec4-ca11-46cb-bd44-31736c8d66cf"),
                            Name = "Marseille"
                        },
                        new
                        {
                            Id = new Guid("c04d0d48-0f1c-4bd8-bfa2-0d0cb0bd66c5"),
                            Name = "Avignon"
                        },
                        new
                        {
                            Id = new Guid("5c727375-139c-4506-bc13-1aa5627c7e29"),
                            Name = "Monaco"
                        },
                        new
                        {
                            Id = new Guid("093eaa96-84ec-49a8-b7fb-3177a46fe6ab"),
                            Name = "Marseille "
                        },
                        new
                        {
                            Id = new Guid("46881132-143a-4581-9407-476450172392"),
                            Name = "Toulon"
                        });
                });

            modelBuilder.Entity("TransConnect.Models.PriceList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal>("From")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PriceType")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("VehicleType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PriceList");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1254a815-8e04-42d3-94b4-7c7c06528938"),
                            From = 0m,
                            PriceType = 0,
                            UnitPrice = 10m,
                            VehicleType = 0
                        },
                        new
                        {
                            Id = new Guid("64f8515f-7a0c-4ab6-a884-d64cccb77821"),
                            From = 10m,
                            PriceType = 0,
                            UnitPrice = 8m,
                            VehicleType = 0
                        },
                        new
                        {
                            Id = new Guid("9ae620dc-4a4a-4822-b381-2de7162e984c"),
                            From = 0m,
                            PriceType = 0,
                            UnitPrice = 15m,
                            VehicleType = 1
                        },
                        new
                        {
                            Id = new Guid("a8dd34ef-59c5-4936-a019-e6240a98a926"),
                            From = 10m,
                            PriceType = 0,
                            UnitPrice = 12m,
                            VehicleType = 1
                        },
                        new
                        {
                            Id = new Guid("50ffe86d-f8bf-47a2-a169-2f3235d1d6f2"),
                            From = 0m,
                            PriceType = 0,
                            UnitPrice = 20m,
                            VehicleType = 3
                        },
                        new
                        {
                            Id = new Guid("2572537d-3790-422d-abfc-ac200d52abc0"),
                            From = 10m,
                            PriceType = 0,
                            UnitPrice = 18m,
                            VehicleType = 3
                        },
                        new
                        {
                            Id = new Guid("e40e52fc-e586-4ae8-b799-2eaaa3938d26"),
                            From = 0m,
                            PriceType = 0,
                            UnitPrice = 25m,
                            VehicleType = 2
                        },
                        new
                        {
                            Id = new Guid("b60cf37d-4f30-4f82-a9be-a91e0fac314f"),
                            From = 10m,
                            PriceType = 0,
                            UnitPrice = 22m,
                            VehicleType = 2
                        },
                        new
                        {
                            Id = new Guid("547d8bc2-bc45-40e6-a8f0-575dfd178163"),
                            From = 0m,
                            PriceType = 0,
                            UnitPrice = 30m,
                            VehicleType = 4
                        },
                        new
                        {
                            Id = new Guid("19842728-6269-4e78-bac0-b8f871172ac5"),
                            From = 10m,
                            PriceType = 0,
                            UnitPrice = 28m,
                            VehicleType = 4
                        },
                        new
                        {
                            Id = new Guid("8c63f9af-7e14-41d4-b237-2b9ee2ca0daf"),
                            From = 0m,
                            PriceType = 1,
                            UnitPrice = 5m,
                            VehicleType = 0
                        },
                        new
                        {
                            Id = new Guid("fb8529e2-4a94-4e8c-b5c6-a119986a2951"),
                            From = 10m,
                            PriceType = 1,
                            UnitPrice = 4m,
                            VehicleType = 0
                        },
                        new
                        {
                            Id = new Guid("2e6e35f7-8bbb-4b00-85bf-5c4ff0ec9255"),
                            From = 0m,
                            PriceType = 1,
                            UnitPrice = 7m,
                            VehicleType = 1
                        },
                        new
                        {
                            Id = new Guid("0853230a-e7d0-40d5-ae1e-477a7f2d4f9e"),
                            From = 10m,
                            PriceType = 1,
                            UnitPrice = 6m,
                            VehicleType = 1
                        },
                        new
                        {
                            Id = new Guid("bf07345b-59c8-46db-877d-8a40cc989256"),
                            From = 0m,
                            PriceType = 1,
                            UnitPrice = 10m,
                            VehicleType = 3
                        },
                        new
                        {
                            Id = new Guid("9c2f3138-a1ca-491c-af61-99eb6fbce77d"),
                            From = 10m,
                            PriceType = 1,
                            UnitPrice = 9m,
                            VehicleType = 3
                        },
                        new
                        {
                            Id = new Guid("1fa8309d-50ea-4abd-9443-b78431b11273"),
                            From = 0m,
                            PriceType = 1,
                            UnitPrice = 12m,
                            VehicleType = 2
                        },
                        new
                        {
                            Id = new Guid("28ecb294-28b2-4007-8eb3-68982f2a425a"),
                            From = 10m,
                            PriceType = 1,
                            UnitPrice = 11m,
                            VehicleType = 2
                        },
                        new
                        {
                            Id = new Guid("3e19502c-a3e4-460b-b549-e58b17ef8c87"),
                            From = 0m,
                            PriceType = 1,
                            UnitPrice = 15m,
                            VehicleType = 4
                        },
                        new
                        {
                            Id = new Guid("8aaa9608-8722-4a1f-9938-a0a4add22891"),
                            From = 10m,
                            PriceType = 1,
                            UnitPrice = 14m,
                            VehicleType = 4
                        });
                });

            modelBuilder.Entity("TransConnect.Models.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("varchar(21)");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Vehicle");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("TransConnect.Models.CarOrder", b =>
                {
                    b.HasBaseType("TransConnect.Models.Order");

                    b.Property<int>("NumOfPassengers")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("CarOrder");
                });

            modelBuilder.Entity("TransConnect.Models.HeavyTruckOrder", b =>
                {
                    b.HasBaseType("TransConnect.Models.Order");

                    b.Property<string>("Materials")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Volume")
                        .HasColumnType("double");

                    b.HasDiscriminator().HasValue("HeavyTruckOrder");
                });

            modelBuilder.Entity("TransConnect.Models.VanOrder", b =>
                {
                    b.HasBaseType("TransConnect.Models.Order");

                    b.Property<string>("Purpose")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasDiscriminator().HasValue("VanOrder");
                });

            modelBuilder.Entity("TransConnect.Models.Car", b =>
                {
                    b.HasBaseType("TransConnect.Models.Vehicle");

                    b.Property<int>("Seats")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Car");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bb2d6b61-a9e2-4ef6-bc8b-56236bbe353d"),
                            Seats = 0
                        });
                });

            modelBuilder.Entity("TransConnect.Models.HeavyTruck", b =>
                {
                    b.HasBaseType("TransConnect.Models.Vehicle");

                    b.HasDiscriminator().HasValue("HeavyTruck");
                });

            modelBuilder.Entity("TransConnect.Models.Van", b =>
                {
                    b.HasBaseType("TransConnect.Models.Vehicle");

                    b.HasDiscriminator().HasValue("Van");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9c5f79b6-8614-4879-92a6-24d830a97fb1")
                        });
                });

            modelBuilder.Entity("TransConnect.Models.DumpTruck", b =>
                {
                    b.HasBaseType("TransConnect.Models.HeavyTruck");

                    b.HasDiscriminator().HasValue("DumpTruck");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d29879c7-3354-4c08-8202-41644d57fcbf")
                        });
                });

            modelBuilder.Entity("TransConnect.Models.RefrigeratedTruck", b =>
                {
                    b.HasBaseType("TransConnect.Models.HeavyTruck");

                    b.HasDiscriminator().HasValue("RefrigeratedTruck");

                    b.HasData(
                        new
                        {
                            Id = new Guid("97422a5d-ac6c-43cb-a4a1-f5d082adaf1c")
                        });
                });

            modelBuilder.Entity("TransConnect.Models.TankerTruck", b =>
                {
                    b.HasBaseType("TransConnect.Models.HeavyTruck");

                    b.HasDiscriminator().HasValue("TankerTruck");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ca561fa5-849a-49b7-8409-a36289a5b97d")
                        });
                });

            modelBuilder.Entity("TransConnect.Models.Edge", b =>
                {
                    b.HasOne("TransConnect.Models.Point", "End")
                        .WithMany("IncludedEdgesToEndPoint")
                        .HasForeignKey("EndId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TransConnect.Models.Point", "Start")
                        .WithMany("IncludedEdgesFromStartPoint")
                        .HasForeignKey("StartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("End");

                    b.Navigation("Start");
                });

            modelBuilder.Entity("TransConnect.Models.Employee", b =>
                {
                    b.HasOne("TransConnect.Models.Employee", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerId");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("TransConnect.Models.Order", b =>
                {
                    b.HasOne("TransConnect.Models.Client", "Client")
                        .WithMany("Orders")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TransConnect.Models.Employee", "Driver")
                        .WithMany("Orders")
                        .HasForeignKey("DriverId");

                    b.HasOne("TransConnect.Models.Point", "End")
                        .WithMany()
                        .HasForeignKey("EndId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TransConnect.Models.Point", "Start")
                        .WithMany()
                        .HasForeignKey("StartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TransConnect.Models.Vehicle", "Vehicle")
                        .WithMany("Orders")
                        .HasForeignKey("VehicleId");

                    b.Navigation("Client");

                    b.Navigation("Driver");

                    b.Navigation("End");

                    b.Navigation("Start");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("TransConnect.Models.OrderPath", b =>
                {
                    b.HasOne("TransConnect.Models.Point", "From")
                        .WithMany()
                        .HasForeignKey("FromId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TransConnect.Models.Order", "Order")
                        .WithMany("OrderPaths")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TransConnect.Models.Point", "To")
                        .WithMany()
                        .HasForeignKey("ToId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("From");

                    b.Navigation("Order");

                    b.Navigation("To");
                });

            modelBuilder.Entity("TransConnect.Models.Client", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("TransConnect.Models.Employee", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("TransConnect.Models.Order", b =>
                {
                    b.Navigation("OrderPaths");
                });

            modelBuilder.Entity("TransConnect.Models.Point", b =>
                {
                    b.Navigation("IncludedEdgesFromStartPoint");

                    b.Navigation("IncludedEdgesToEndPoint");
                });

            modelBuilder.Entity("TransConnect.Models.Vehicle", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
